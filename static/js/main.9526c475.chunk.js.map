{"version":3,"sources":["redux/robots/robots.types.js","redux/robots/robots.reducer.js","redux/root-reducer.js","redux/store.js","components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundry.js","containers/App.js","index.js"],"names":["RobotActionTypes","FILTER_ROBOTS","robotsArray","id","name","username","email","INITIAL_STATE","robots","robotsReducer","state","action","type","filter","robot","toLowerCase","includes","payload","rootReducer","combineReducers","middlewares","logger","store","createStore","applyMiddleware","Card","className","src","alt","CardList","map","user","i","key","SearchBox","searchfield","searchChange","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","ErrorBoundry","hasError","error","info","this","setState","Component","App","onSearchChange","event","target","value","fetch","then","response","json","users","filteredRobots","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9526c475.chunk.js","sourcesContent":["const RobotActionTypes = {\n    FILTER_ROBOTS: 'FILTER_ROBOTS'\n}\n\nexport default RobotActionTypes","import RobotActionTypes from \"./robots.types\";\n\nconst robotsArray =  [\n  {\n    id: 1,\n    name: \"Leanne Graham\",\n    username: \"Bret\",\n    email: \"Sincere@april.biz\",\n  },\n  {\n    id: 2,\n    name: \"Ervin Howell\",\n    username: \"Antonette\",\n    email: \"Shanna@melissa.tv\",\n  },\n  {\n    id: 3,\n    name: \"Clementine Bauch\",\n    username: \"Samantha\",\n    email: \"Nathan@yesenia.net\",\n  },\n  {\n    id: 4,\n    name: \"Patricia Lebsack\",\n    username: \"Karianne\",\n    email: \"Julianne.OConner@kory.org\",\n  },\n  {\n    id: 5,\n    name: \"Chelsey Dietrich\",\n    username: \"Kamren\",\n    email: \"Lucio_Hettinger@annie.ca\",\n  },\n  {\n    id: 6,\n    name: \"Mrs. Dennis Schulist\",\n    username: \"Leopoldo_Corkery\",\n    email: \"Karley_Dach@jasper.info\",\n  },\n  {\n    id: 7,\n    name: \"Kurtis Weissnat\",\n    username: \"Elwyn.Skiles\",\n    email: \"Telly.Hoeger@billy.biz\",\n  },\n  {\n    id: 8,\n    name: \"Nicholas Runolfsdottir V\",\n    username: \"Maxime_Nienow\",\n    email: \"Sherwood@rosamond.me\",\n  },\n  {\n    id: 9,\n    name: \"Glenna Reichert\",\n    username: \"Delphine\",\n    email: \"Chaim_McDermott@dana.io\",\n  },\n  {\n    id: 10,\n    name: \"Clementina DuBuque\",\n    username: \"Moriah.Stanton\",\n    email: \"Rey.Padberg@karina.biz\",\n  },\n]\n\n\nconst INITIAL_STATE = {\n  robots: robotsArray\n};\n\nconst robotsReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case RobotActionTypes.FILTER_ROBOTS:\n        return {\n            ...state,\n            robots: robotsArray.filter(robot => robot.name.toLowerCase().includes(action.payload.toLowerCase()))\n        }  \n    default:\n      return state;\n  }\n};\n\nexport default robotsReducer\n","import {combineReducers} from 'redux'\n\nimport robotsReducer from './robots/robots.reducer'\n\n\nconst rootReducer = combineReducers({\n    robots: robotsReducer\n})\n\nexport default rootReducer","import { createStore, applyMiddleware } from \"redux\";\nimport logger from \"redux-logger\";\n\nimport rootReducer from \"./root-reducer\";\n\nconst middlewares = [logger];\n\n\nexport const store = createStore(rootReducer, applyMiddleware(...middlewares));\n\nexport default store;\n","import React from \"react\";\n\nconst Card = ({ id, name, email }) => {\n  return (\n    <div className=\"bg-light-green dib br3 pa3 ma2 tc grow bw2 shadow-5\">\n      <img src={`https://robohash.org/${id}?150x200`} alt=\"photo\"></img>\n      <div>\n        <h2>{name}</h2>\n        <p>{email}</p>\n      </div>\n    </div>\n  );\n};\n\nexport default Card;\n","import React from \"react\";\nimport Card from \"./Card\";\n\nconst CardList = ({ robots }) => {\n  return (\n    <div>\n      {robots.map((user, i) => {\n        return (\n          <Card key={i} id={user.id} name={user.name} email={user.email} />\n        );\n      })}\n    </div>\n  );\n};\n\nexport default CardList;\n","import React from \"react\";\n\nconst SearchBox = ({searchfield, searchChange}) => {\n  return (\n    <div className=\"pa2\">\n      <input className=\"pa3 ba b--green bg-lightest-blue\" type=\"search\" placeholder=\"search robots\" onChange={searchChange} />\n    </div>\n  );\n};\n\nexport default SearchBox;\n","import React from \"react\";\n\nconst Scroll = (props) => {\n  return (\n    <div\n      style={{\n        overflowY: \"scroll\",\n        border: \"5px solid black\",\n        height: \"800px\",\n      }}\n    >\n      {props.children}\n    </div>\n  );\n};\n\nexport default Scroll;\n","import React, {Component} from 'react'\n\nclass ErrorBoundry extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            hasError: false\n        }\n    }\n\n    componentDidCatch(error, info) {\n        this.setState({ hasError: true})\n    }\n\n    render() {\n        if (this.state.hasError) {\n            return <h1>Oooops. That is not good</h1>\n        }\n        return this.props.children\n    }\n}\n\nexport default ErrorBoundry","import React, { Component } from \"react\";\nimport CardList from \"../components/CardList\";\nimport SearchBox from \"../components/SearchBox\";\nimport Scroll from \"../components/Scroll\";\nimport ErrorBoundry from \"../components/ErrorBoundry\";\nimport \"./App.css\";\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      robots: [],\n      searchfield: \"\",\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\n      .then((response) => response.json())\n      .then((users) => this.setState({ robots: users }));\n  }\n\n  onSearchChange = (event) => {\n    this.setState({ searchfield: event.target.value });\n  };\n\n  render() {\n    const { robots, searchfield } = this.state;\n\n    const filteredRobots = robots.filter((robot) => {\n      return robot.name.toLowerCase().includes(searchfield.toLowerCase());\n    });\n    return !robots.length ? (\n      <h1>Loading</h1>\n    ) : (\n      <div className=\"tc\">\n        <h1 className=\"f1\">RoboFriends</h1>\n        <SearchBox searchChange={this.onSearchChange} />\n        <Scroll>\n          <ErrorBoundry>\n            <CardList robots={filteredRobots} />\n          </ErrorBoundry>\n        </Scroll>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\n\nimport { store } from \"./redux/store\";\n\nimport \"./index.css\";\nimport App from \"./containers/App\";\nimport tachyons from 'tachyons'\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}